{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirwa\\\\OneDrive\\\\Desktop\\\\todo-task\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// This is NOT runnable code without a backend\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/tasks'; // Replace with your actual backend URL\n\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // FETCH TASKS ON COMPONENT MOUNT\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(API_BASE_URL);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []); // Empty dependency array means this runs once on mount\n\n  // ADD TASK FUNCTION (updates backend AND local state)\n  const addTask = async newTask => {\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const addedTask = await response.json(); // Backend should return the newly created task with its ID\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // MARK DONE FUNCTION (updates backend AND local state)\n  const markDone = async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // ... rest of your App.js JSX (return statement and styles) remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.appContainer,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainContentBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.subHeader,\n          children: \"Add a Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.verticalLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskListScrollContainer,\n          children: /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            markDone: markDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n// Styles for the App component and its layout\n_s(App, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = App;\nconst styles = {\n  // Overall container for the application, centering the main content box\n  appContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    // Center horizontally\n    alignItems: 'flex-start',\n    // Align to the top vertically\n    minHeight: '100vh',\n    // Ensure it takes at least the full viewport height\n    padding: '40px 20px',\n    // Padding around the main content box\n    backgroundColor: '#f0f2f5',\n    // Light background color for the page\n    fontFamily: 'Arial, sans-serif',\n    // Consistent font family\n    boxSizing: 'border-box' // Include padding in element's total width/height\n  },\n  // Main box containing the form, divider, and task list\n  mainContentBox: {\n    display: 'flex',\n    // Use flexbox for column layout\n    width: '900px',\n    // Fixed width for the entire content area\n    backgroundColor: '#ffffff',\n    // White background for the box\n    borderRadius: '8px',\n    // Rounded corners\n    boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n    // Subtle shadow\n    padding: '30px',\n    // Inner padding\n    gap: '30px',\n    // Space between the columns\n    boxSizing: 'border-box'\n  },\n  // Styles for each column (left and right)\n  column: {\n    flex: 1 // Each column takes equal available space\n  },\n  // Styles for the vertical line divider\n  verticalLine: {\n    width: '1px',\n    // Thin line\n    backgroundColor: '#ddd',\n    // Light gray color\n    margin: '0 15px',\n    // Horizontal margin around the line\n    alignSelf: 'stretch' // Make the line stretch to the full height of its flex container\n  },\n  // Styles for sub-headers (e.g., \"Add a Task\")\n  subHeader: {\n    fontSize: '24px',\n    fontWeight: 'normal',\n    // Not bold as per mockup\n    marginBottom: '30px',\n    // Space below the header\n    color: '#333' // Dark gray text color\n  },\n  // Container for the TaskList to enable scrolling\n  taskListScrollContainer: {\n    maxHeight: '400px',\n    // Maximum height before scrolling is enabled\n    overflowY: 'auto',\n    // Enable vertical scrollbar when content exceeds maxHeight\n    paddingRight: '10px' // Add some padding to prevent content from being hidden by scrollbar\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","Error","status","data","json","err","message","addTask","newTask","method","headers","body","JSON","stringify","addedTask","prevTasks","markDone","id","filter","task","style","styles","appContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","color","mainContentBox","column","subHeader","verticalLine","taskListScrollContainer","_c","display","justifyContent","alignItems","minHeight","padding","backgroundColor","fontFamily","boxSizing","width","borderRadius","boxShadow","gap","flex","margin","alignSelf","fontSize","fontWeight","marginBottom","maxHeight","overflowY","paddingRight","$RefreshReg$"],"sources":["C:/Users/nirwa/OneDrive/Desktop/todo-task/frontend/src/App.jsx"],"sourcesContent":["// This is NOT runnable code without a backend\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskList from \"./components/TaskList\";\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/tasks'; // Replace with your actual backend URL\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // FETCH TASKS ON COMPONENT MOUNT\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch(API_BASE_URL);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setTasks(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []); // Empty dependency array means this runs once on mount\r\n\r\n  // ADD TASK FUNCTION (updates backend AND local state)\r\n  const addTask = async (newTask) => {\r\n    try {\r\n      const response = await fetch(API_BASE_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const addedTask = await response.json(); // Backend should return the newly created task with its ID\r\n      setTasks((prevTasks) => [...prevTasks, addedTask]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // MARK DONE FUNCTION (updates backend AND local state)\r\n  const markDone = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== id));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // ... rest of your App.js JSX (return statement and styles) remains the same\r\n  return (\r\n    <div style={styles.appContainer}>\r\n      {loading && <p>Loading tasks...</p>}\r\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n      <div style={styles.mainContentBox}>\r\n        <div style={styles.column}>\r\n          <h3 style={styles.subHeader}>Add a Task</h3>\r\n          <TaskForm addTask={addTask} />\r\n        </div>\r\n        <div style={styles.verticalLine}></div>\r\n        <div style={styles.column}>\r\n          <div style={styles.taskListScrollContainer}>\r\n            <TaskList tasks={tasks} markDone={markDone} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// Styles for the App component and its layout\r\nconst styles = {\r\n  // Overall container for the application, centering the main content box\r\n  appContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center', // Center horizontally\r\n    alignItems: 'flex-start', // Align to the top vertically\r\n    minHeight: '100vh', // Ensure it takes at least the full viewport height\r\n    padding: '40px 20px', // Padding around the main content box\r\n    backgroundColor: '#f0f2f5', // Light background color for the page\r\n    fontFamily: 'Arial, sans-serif', // Consistent font family\r\n    boxSizing: 'border-box', // Include padding in element's total width/height\r\n  },\r\n  // Main box containing the form, divider, and task list\r\n  mainContentBox: {\r\n    display: 'flex', // Use flexbox for column layout\r\n    width: '900px', // Fixed width for the entire content area\r\n    backgroundColor: '#ffffff', // White background for the box\r\n    borderRadius: '8px', // Rounded corners\r\n    boxShadow: '0 5px 15px rgba(0,0,0,0.1)', // Subtle shadow\r\n    padding: '30px', // Inner padding\r\n    gap: '30px', // Space between the columns\r\n    boxSizing: 'border-box',\r\n  },\r\n  // Styles for each column (left and right)\r\n  column: {\r\n    flex: 1, // Each column takes equal available space\r\n  },\r\n  // Styles for the vertical line divider\r\n  verticalLine: {\r\n    width: '1px', // Thin line\r\n    backgroundColor: '#ddd', // Light gray color\r\n    margin: '0 15px', // Horizontal margin around the line\r\n    alignSelf: 'stretch', // Make the line stretch to the full height of its flex container\r\n  },\r\n  // Styles for sub-headers (e.g., \"Add a Task\")\r\n  subHeader: {\r\n    fontSize: '24px',\r\n    fontWeight: 'normal', // Not bold as per mockup\r\n    marginBottom: '30px', // Space below the header\r\n    color: '#333', // Dark gray text color\r\n  },\r\n  // Container for the TaskList to enable scrolling\r\n  taskListScrollContainer: {\r\n    maxHeight: '400px', // Maximum height before scrolling is enabled\r\n    overflowY: 'auto', // Enable vertical scrollbar when content exceeds maxHeight\r\n    paddingRight: '10px', // Add some padding to prevent content from being hidden by scrollbar\r\n  }\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}