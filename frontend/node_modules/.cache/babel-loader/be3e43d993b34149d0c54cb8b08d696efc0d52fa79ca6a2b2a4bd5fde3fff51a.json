{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirwa\\\\OneDrive\\\\Desktop\\\\todo-task\\\\frontend\\\\src\\\\components\\\\TaskList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  markDone\n}) => {\n  // Get only the last 5 tasks\n  const tasksToDisplay = tasks.slice(-5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.taskListContainer,\n    children: tasksToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.noTasksMessage,\n      children: \"No tasks added yet. Add a new task!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : tasksToDisplay.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.taskContent,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.taskDescription,\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.doneButton,\n        onClick: () => markDone(task.id),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nconst styles = {\n  taskListContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px' // Space between task cards\n  },\n  taskCard: {\n    backgroundColor: '#e0e0e0',\n    // Gray background for the cards\n    borderRadius: '8px',\n    padding: '15px 20px',\n    display: 'flex',\n    // This makes taskContent and button flex items\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.05)' // Subtle shadow\n  },\n  taskContent: {\n    flexGrow: 1,\n    // Allows content to take up available space\n    marginRight: '15px' // Space before the button\n    // No overflow/webkit properties here; they are on taskDescription\n  },\n  taskDescription: {\n    fontSize: '14px',\n    color: '#666',\n    margin: 0,\n    lineHeight: '1.4',\n    // Adjust line height for better spacing between lines\n    overflow: 'hidden',\n    whiteSpace: 'normal',\n    // Ensure text wraps\n    display: '-webkit-box',\n    // For multi-line ellipsis\n    WebkitLineClamp: 2,\n    // Limit to 2 lines (adjust as needed)\n    WebkitBoxOrient: 'vertical',\n    textOverflow: 'ellipsis',\n    // Add ellipsis for overflow\n    maxHeight: '40px' // Keep an explicit max-height as a fallback/reinforcement\n  },\n  doneButton: {\n    padding: '8px 15px',\n    backgroundColor: '#e0e0e0',\n    // Background matches the task card\n    color: '#333',\n    // Dark text for contrast\n    border: '1px solid #ccc',\n    // Subtle border\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '14px',\n    fontWeight: 'bold',\n    minWidth: '70px',\n    textAlign: 'center',\n    transition: 'background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out',\n    boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\n  },\n  noTasksMessage: {\n    fontSize: '16px',\n    color: '#888',\n    textAlign: 'center',\n    marginTop: '50px' // You can adjust or remove this if you want it positioned differently\n  }\n};\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskList","tasks","markDone","tasksToDisplay","slice","style","styles","taskListContainer","children","length","noTasksMessage","fileName","_jsxFileName","lineNumber","columnNumber","map","task","taskCard","taskContent","taskDescription","description","doneButton","onClick","id","_c","display","flexDirection","gap","backgroundColor","borderRadius","padding","justifyContent","alignItems","boxShadow","flexGrow","marginRight","fontSize","color","margin","lineHeight","overflow","whiteSpace","WebkitLineClamp","WebkitBoxOrient","textOverflow","maxHeight","border","cursor","fontWeight","minWidth","textAlign","transition","marginTop","$RefreshReg$"],"sources":["C:/Users/nirwa/OneDrive/Desktop/todo-task/frontend/src/components/TaskList.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TaskList = ({ tasks, markDone }) => {\r\n  // Get only the last 5 tasks\r\n  const tasksToDisplay = tasks.slice(-5);\r\n\r\n  return (\r\n    <div style={styles.taskListContainer}>\r\n      {/* Conditional rendering for no tasks */}\r\n      {tasksToDisplay.length === 0 ? (\r\n        <p style={styles.noTasksMessage}>No tasks added yet. Add a new task!</p>\r\n      ) : (\r\n        tasksToDisplay.map((task) => (\r\n          <div key={task.id} style={styles.taskCard}>\r\n            {/* taskContent retains flex properties */}\r\n            <div style={styles.taskContent}>\r\n              {/* taskDescription handles text wrapping and overflow */}\r\n              <p style={styles.taskDescription}>{task.description}</p>\r\n            </div>\r\n            <button style={styles.doneButton} onClick={() => markDone(task.id)}>\r\n              Done\r\n            </button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  taskListContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '20px', // Space between task cards\r\n  },\r\n  taskCard: {\r\n    backgroundColor: '#e0e0e0', // Gray background for the cards\r\n    borderRadius: '8px',\r\n    padding: '15px 20px',\r\n    display: 'flex', // This makes taskContent and button flex items\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0 2px 5px rgba(0,0,0,0.05)', // Subtle shadow\r\n  },\r\n  taskContent: {\r\n    flexGrow: 1, // Allows content to take up available space\r\n    marginRight: '15px', // Space before the button\r\n    // No overflow/webkit properties here; they are on taskDescription\r\n  },\r\n  taskDescription: {\r\n    fontSize: '14px',\r\n    color: '#666',\r\n    margin: 0,\r\n    lineHeight: '1.4', // Adjust line height for better spacing between lines\r\n    overflow: 'hidden',\r\n    whiteSpace: 'normal', // Ensure text wraps\r\n    display: '-webkit-box', // For multi-line ellipsis\r\n    WebkitLineClamp: 2, // Limit to 2 lines (adjust as needed)\r\n    WebkitBoxOrient: 'vertical',\r\n    textOverflow: 'ellipsis', // Add ellipsis for overflow\r\n    maxHeight: '40px', // Keep an explicit max-height as a fallback/reinforcement\r\n  },\r\n  doneButton: {\r\n    padding: '8px 15px',\r\n    backgroundColor: '#e0e0e0', // Background matches the task card\r\n    color: '#333', // Dark text for contrast\r\n    border: '1px solid #ccc', // Subtle border\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    fontSize: '14px',\r\n    fontWeight: 'bold',\r\n    minWidth: '70px',\r\n    textAlign: 'center',\r\n    transition: 'background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out',\r\n    boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n  },\r\n  noTasksMessage: {\r\n    fontSize: '16px',\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginTop: '50px', // You can adjust or remove this if you want it positioned differently\r\n  },\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}